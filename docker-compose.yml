version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: songo-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: songo_db
      MYSQL_USER: songo_user
      MYSQL_PASSWORD: songo_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - songo-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: songo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - songo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: songo-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:mysql://mysql:3306/songo_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      DATABASE_USERNAME: songo_user
      DATABASE_PASSWORD: songo_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: songoSecretKeyForJWTTokenGenerationAndValidation2024!@#$%^&*()
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key}
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - songo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 60s

  # Angular Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: songo-frontend
    restart: unless-stopped
    environment:
      API_URL: http://localhost:8080/api
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - songo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      timeout: 10s
      retries: 3
      interval: 30s

  # phpMyAdmin (for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: songo-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: songo_user
      PMA_PASSWORD: songo_password
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8081:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - songo-network

  # MailHog (for email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: songo-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - songo-network

  # Nginx Load Balancer (optional, for production scaling)
  nginx-lb:
    image: nginx:alpine
    container_name: songo-nginx-lb
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - songo-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  songo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
